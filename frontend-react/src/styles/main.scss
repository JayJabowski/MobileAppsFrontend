/*
Deliveroo-Colors:

primary Color: #5bc9bb
secondary light: #fafafa
primary light: #ffffff
secondary color: #367d89
light text: #c3c8cb

*/

/*
Old Colors:

    primaryColor : #159A9C;
    secondaryColor : #B4BEC9;

    primaryLight : #FFFFFF;
    secondaryLight : #DEEFE7;

    primaryDark :  #002333;

*/

*{
    margin:0;
    padding:0;
}
:root{

    --fontFactor : 1;

    //FONT-SIZES

    --listItemSize : calc(16px * var(--fontFactor));
    --inputSize : calc(14px * var(--fontFactor));
    --textSize : calc(14px * var(--fontFactor));
    --titleSize : calc(20px * var(--fontFactor));
    --titleSizeBig : calc(40px * var(--fontFactor));
    --smallSize : calc(10px * var(--fontFactor));

    //COLORS (LightMode initial)

    --primaryC : #5bc9bb;
    --primaryShadeC : #e9ebea;

    --backgroundC : #FFFFFF;
    --backgroundShadeC : #fafafa;

    --textC :  #090909;
    --textShadeC : #c3c8cb;

    --lightIndent: 4%;
    --lightIndentRemainder: calc(100% - 2* var(--lightIndent));

    //Dimensions
    --maxWidth: 400px;
    --menuWidth : 40%;
    --heightTitlebar : 5em;

}


@font-face{
    font-family: Outfit;
    src: url(../../font/Outfit-VariableFont_wght.ttf);
}


//FONT-WEIGHTS

$bold : 700;
$semibold : 600;
$regular : 400;
$thin: 300;

//ABSOLUTE LAYOUT


@mixin baseFont($weight, $size){
    font-family: Outfit;
    font-weight: $weight;
    font-size: $size;
    color: var(--textC);
}

@mixin roundedCorners($radius){
    @if $radius{
        border-radius: $radius;
    }
    @else{
        border-radius: 0.3em;
    }
}
@mixin dropShadow(){
    $size : 0.5em;

    box-shadow: 0 0 $size var(--backgroundShadeC);
}

@mixin flexOAJ($orientation, $align, $justify){
    display: flex;
    flex-direction: $orientation;
    align-items: $align;
    justify-content: $justify;
}

@mixin insertSpacing(){
    padding: 0.4em;
    padding-left: 1em;
    padding-right: 1em;
    margin: 0.4em;
    margin-left: 0.8em;
    margin-right: 0.8em;
}

@mixin lightIndent(){
    margin-left: var(--lightIndent);
    margin-right: var(--lightIndent);
    width: var(--lightIndentRemainder);
}

@mixin hideScrollbar(){
    -ms-overflow-style: none; /* for Internet Explorer, Edge */
    scrollbar-width: none; /* for Firefox */ 
    
    
    &::-webkit-scrollbar {
        display: none; /* for Chrome, Safari, and Opera */
    }
}

@mixin defaultButton(){

    @include roundedCorners(false);
    @include baseFont($semibold,var(--textSize));

    color:var(--backgroundC);
    background-color: var(--primaryC);
    padding: 1em;
    margin-top: 1em;
    margin-bottom: em;
    border-width: 0;

    &:hover{
        background-color: var(--backgroundC);
        color: var(--textC);
    }
}

@mixin inlineButton(){
    button {
        @include roundedCorners(false);
        @include flexOAJ(row, center , center);
        background: transparent;
        border: 0;

        height: 2.5em;
        width: 2.5em;

        margin-top: 0;

        &:hover{
            background-color: var(--backgroundShadeC);
 
        }
        img{
            height: 1.5em;
            width: 1.5em;
            
        }
    }
}

@mixin titleButton(){
    background: transparent;
    border: 0;

    padding: 0;

    &:hover{
        cursor: pointer;
        background-color: var(--backgroundShadeC);
    }
}

@mixin imageLimiter(){
    img{
        height: 100%;
        width: 100%;
    }
}

html{
    margin: 0;
    padding: 0;
    border: 0;
    overflow-x: hidden;
    overflow-y: hidden;
}

.background{
    @include flexOAJ(column, center, center);
    background-color: var(--backgroundC);
    
    width: 100vw;
    height: 100vh;

    //override:
    margin: 0;
    padding: 0;
}

.mainContainer{
    @include dropShadow();
    @include flexOAJ(column, stretch, space-between);
    position: relative;
    overflow-y: hidden;
    background-color: var(--backgroundShadeC);

    width: 100%;
    max-width: var(--maxWidth);

    flex-grow:1;
}

.chatBoxWrapper{
    @include flexOAJ(column, flex-start, flex-start);
    height: calc(100% - var(--heightTitlebar));
    
}

.chatBox{
    @include flexOAJ(column, flex-start, flex-start);
    flex-grow: 1;

    @include hideScrollbar();
    overflow-y: scroll;
    overflow-x: hidden;

    .wrapper{
        @include flexOAJ(column, flex-start, flex-start);
        width:100%;
        
    }
    .self{
        align-items: flex-end;
    }

    .self .time{
        align-items: flex-end;
    }

    .messageCard{
        background-color: var(--backgroundC);
        
        @include roundedCorners(false);
        @include flexOAJ(column, flex-start, flex-start);
        @include insertSpacing();

        max-width: 90%;
      

        .name{
            @include baseFont($bold, var(--textSize));
        }
        .text{
            @include baseFont(Light, var(--textSize));
            word-break: break-word;
            
        }
        .time{
            @include baseFont($bold, var(--smallSize));
            color: var(--primaryShadeC);
        }
        img{
            @include roundedCorners(false);
        }
        
    }

    .timeWrapper{
        @include flexOAJ(column, center, center);
        width:100%;

    }

    .timecard{
        @include baseFont($thin, var(--textSize));
        @include roundedCorners(false);
        @include flexOAJ(row, stretch, center);
        @include insertSpacing();

        background-color: var(--backgroundC);
    }
    
}

.footer {
    @include dropShadow();
    @include flexOAJ(column, stretch , flex-start );
    background-color: var(--backgroundC);

    .messageWrapper {
        @include flexOAJ(row, center, space-between);
        flex-grow: 1;
        @include imageLimiter();
        @include lightIndent();


        border-bottom: 0.05em var(--primaryShadeC) solid;
        
        margin-bottom: 2em;

        min-height: 3em;

        textarea {
            @include baseFont($regular, var(--inputSize));

            flex-grow: 1;
            overflow-y: hidden;
            resize: none;

            border: 0;

            margin-left: 1em;
            margin-right: 1em;

            word-break: break-word;

            &:focus {
                outline-width: 0;
            }
        }

        @include inlineButton();
    }
}

.titleBar{
    @include flexOAJ(row, center, flex-start);
    @include baseFont($bold, var(--titleSize));
    //height: var(--heightTitlebar);

    background-color: var(--backgroundC);


    .titleLeft{
        margin-left: 0.5em;
        width: 2.5em;
    }
    .title{
        @include flexOAJ(row, center, center);
        flex-grow: 1;

        height: 2.6em;
    }
    .titleRight{
        margin-right:0.5em;
        width: 2.5em;
        @include flexOAJ(row, center, flex-end);
    }
    
}

.menu{
    position: fixed;
    
    top: calc(var(--heightTitlebar) *1.4);
    height: 15em;
    
    width:  var(--menuWidth);
    left: var(--menuWidth);
    transition: left 0.2s linear;

    @include baseFont($semibold, var(--textSize));
    @include flexOAJ(column, center , flex-start);
    @include dropShadow();
    @include roundedCorners(false);


    background-color: var(--backgroundC);
    

    
    .menuItem{
        @include roundedCorners(false);


        color: var(--textC);

        font-size: var(--listItemSize);
        padding: 1em;

        &:hover{
            cursor: pointer;
        }
    }
}

.menuNew{
    position: fixed;
    top: 6em;
    left: 6em;
    width: 6em;
    height: 6em;
}

.breakButton{
    @include defaultButton();
    @include lightIndent();
 }

 .firstPrio{
    background-color: var(--primaryC);
 }

 .secondPrio{
    background-color: var(--backgroundC);
    color: var(--textShadeC);
 }



.loginRegister{
    @include flexOAJ(column, stretch, flex-start);
    @include baseFont($regular,var(--inputSize));

    height: calc(100% - var(--heightTitlebar));

    form{
        @include flexOAJ(column,stretch, center);

        margin-top: 1em;

        input{
               border: 0;
               border-radius: 0;
               color: var(--textC);
               background-color: var(--backgroundC);
        }

        .inputWrapper{
            background-color: var(--backgroundC);

            @include flexOAJ(row, center, space-between);
            @include baseFont($regular, var(--inputSize));

            .defaultInput{
                @include lightIndent();
                @include flexOAJ(row, center, flex-start);
                flex-grow: 1;

                input{
                    flex-grow: 1;
                    margin-bottom: 0.7em;
                    margin-top: 0.7em;

                    &:focus{
                        outline-width: 0;
                    }
                }

                button{
                    &:disabled{
                        display: none;
                    }
                }

                @include inlineButton();

                margin-bottom: 1em;
                margin-top: 1em;
                border-bottom: 0.05em var(--textShadeC) solid;
            }

            
        

        
        }

        label{
            color: var(--primaryC);
        }
        .passwordWrapper{
            @include flexOAJ(row,stretch, center);

            margin-bottom: 1em;
            margin-top: 0.2em;

            input{
                &[type="text"], &[type="password"]{
                    flex-grow: 1;
                    margin:0;
                }
            }
            
            .inlineButton{
                @include roundedCorners(false);
                @include baseFont($semibold,var(--textSize));
                
                color:var(--backgroundC);
               
                background-size: 1.8em 1.8em;
                background-repeat: no-repeat;
                background-position: center;
                color: var(--textC);
                background-color: var(--backgroundC);
                
                
                padding: 1em;
                width: 2.8em;
                border-width: 0;
                margin:0;
                margin-left: 0.6em;
                
                cursor: pointer;                
                
                
                &:hover{
                    background-color: var(--primaryC);
                }
            }
        }

    }
    .breakinglabeledCheckbox{
        @include flexOAJ(row, center , flex-start);
        @include lightIndent();
        margin-top: 0.4em;

        label{
            margin-left: 0.5em;
        }
    }
    p{
        color: var(--textShadeC);
        @include lightIndent();

        margin-top: 2em;
        margin-bottom: 2em;

        span{
            color: var(--textC);
            font-weight: $bold;
        }

    }
    h1{
        @include lightIndent();

        font-size: var(--titleSizeBig);

        margin-bottom: 0em;
        margin-top: 3em;
    }

  
}

.errMsgWrapper{

    .errMsg{
        @include roundedCorners(false);
        @include baseFont($regular, var(--inputSize) );
        color: var(--backgroundC);
        background-color: var(--textC);
        margin-bottom: 0.4em;

        padding: 1em;
    }

    button{
        cursor: pointer;
    }
}

.backButtonWrapper{
    position: relative;


    .backPopup{
        position: fixed;
    z-index: 1; /*stay on top*/
        height: 8em;
        width: 20em;
        top: 10em;
        left: 10em;
    }
}

.titleButton{
    @include titleButton();

    height: calc(var(--titleSize) * 1.2);
    width: calc(var(--titleSize) * 1.2);

    @include imageLimiter();
    
    &:disabled{
        display:none;
    }
    
}

.searchField{
    @include roundedCorners(false);
    @include dropShadow();
    @include flexOAJ(row, center, center);
    @include baseFont($regular, var(--inputSize));
    position:fixed;
    height: 2em;
    left: calc(50vw - (var(--maxWidth) /2) + 5vw);
    top:calc(var(--heightTitlebar) + 1em);
    width: calc(var(--maxWidth) - 10vw);

    @include imageLimiter();

    button{
        width:  2.5em;
        height: 2.5em;

        @include imageLimiter();

        background: transparent;
        border: 0;

        &:disabled{
            display: none;
        }
    }

    @include inlineButton();

    input{
        flex-grow: 1;
        border:none;

        &:focus{
            outline-width: 0;
        }
    }

    background-color: var(--backgroundC);
    z-index: 1;

}

.filterField{
    position:fixed;
    z-index: 1;
    max-width: 500px;
    left: 15em;
    top: 20em;

}

.searchFocus{
    background-color: var(--primaryC);
}


